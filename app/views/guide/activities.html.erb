<div class="row navigation-buttons">
  <div class="small-6 columns go-back">
    <%= link_to "<i class='fa fa-arrow-left'></i> Body Measurements".html_safe, guide_body_measurements_path, class: 'button tiny round' %>
  </div>
  <div class="small-6 columns go-forward">
    <%= link_to "Foods <i class='fa fa-arrow-right'></i>".html_safe, guide_foods_path, class: 'button tiny round' %>
  </div>
</div>

<div class="page-header">
  <h1>Activities <small>Chapter 5</small></h1>
</div>

<p>
  Using the fitgem methods activity information can be logged to the fitbit.com service, deleted from the service, and queried using various time-based or metadata-based methods.  The most useful pieces of information when working with activities are the <b>activity id</b>
  and the <b>activity log id</b>.  The former refers to a definition of an activity, while the latter refers to the actual logging
  of a specific activity for a user on a date.
</p>

<h3>Fetching Activity Information</h3>
<p>
  Once you have an instance of the fitgem client object (for which <code>client.verified? == true</code> you have the ability to retrieve activity data in <strong>four ways</strong>.
</p>

<table class="table">
  <tbody>
  <tr>
    <td><code>frequent_activities()</code></td>
    <td>Fetch the current user's frequently logged activities</td>
  </tr>
  <tr>
    <td><code>recent_activities()</code></td>
    <td>Fetch the current user's recently logged activities</td>
  </tr>
  <tr>
    <td><code>favorite_activities()</code></td>
    <td>Fetch the current user's favorite activities</td>
  </tr>
  <tr>
    <td><code>activities_on_date(date)</code></td>
    <td>Fetch all activities logged on a specified date</td>
  </tr>
  </tbody>
</table>

<div class="panel callout radius">
  <i class="fa fa-book"></i>&nbsp;
  View the Fitbit reference page for <a href="http://wiki.fitbit.com/display/API/API-Log-Activity">logging</a> and <a href="http://wiki.fitbit.com/display/API/API-Get-Time-Series">retrieving</a> activity data.
</div>

<pre><code class="ruby">recent_activities = client.recent_activities
frequent_activities = client.frequent_activities
favorite_activities = client.favorite_activities
activities_today = client.activities_on_date('today')
activities_on_march_third = client.activities_on_date('2011-03-03')
</code></pre>

<p>The method <code>activities_on_date(date)</code> takes either a String in YYYY-MM-DD format, the strings 'today' or 'yesterday', or a Ruby Date object to retrieve relative dates.</p>

<p>The hash returned from the activities methods contains a list of the activities found in the query, as well as summary information about the activities.  An example is shown below (please note this is static data for illustration purposes.)</p>

<pre><code class="ruby">{"activities"=>
  [{"activityId"=>1020,
    "activityParentId"=>90001,
    "activityParentName"=>"Bicycling",
    "calories"=>148,
    "description"=>"Leisurely - 10 to 11.9mph",
    "distance"=>3.93,
    "duration"=>1200000,
    "isFavorite"=>true,
    "logId"=>1529651,
    "name"=>"Bicycling",
    "startTime"=>"08:31"},
   {"activityId"=>2130,
    "activityParentId"=>2130,
    "activityParentName"=>
     "Weight lifting",
    "calories"=>222,
    "description"=>"",
    "distance"=>0,
    "duration"=>3600000,
    "isFavorite"=>true,
    "logId"=>1529653,
    "name"=>
     "Weight lifting",
    "startTime"=>"09:00"},
   {"activityId"=>1020,
    "activityParentId"=>90001,
    "activityParentName"=>"Bicycling",
    "calories"=>147,
    "description"=>"Leisurely - 10 to 11.9mph",
    "distance"=>3.92,
    "duration"=>1190000,
    "isFavorite"=>true,
    "logId"=>1529652,
    "name"=>"Bicycling",
    "startTime"=>"10:30"}],
 "summary"=>
  {"activeScore"=>443,
   "caloriesOut"=>1633,
   "distances"=>
    [{"activity"=>"total", "distance"=>10.04},
     {"activity"=>"tracker", "distance"=>2.19},
     {"activity"=>"loggedActivities", "distance"=>7.85},
     {"activity"=>"veryActive", "distance"=>0.58},
     {"activity"=>"moderatelyActive", "distance"=>1.3},
     {"activity"=>"lightlyActive", "distance"=>0.29},
     {"activity"=>"sedentaryActive", "distance"=>0},
     {"activity"=>
       "Weight lifting",
      "distance"=>0},
     {"activity"=>"Bicycling", "distance"=>7.85}],
   "fairlyActiveMinutes"=>104,
   "lightlyActiveMinutes"=>29,
   "sedentaryMinutes"=>730,
   "steps"=>4845,
   "veryActiveMinutes"=>22}}
</code></pre>

<p>There is much you can distill from the returned data; in addition to the list of logged activities you get access to total distances traveled during activities, total 'active core' (a Fitbit measure of how active you are over the course of the day), and an analysis (via the Fitbit tracker) of how your activities break down across the sedentary-to-highly-active spectrum.</p>

<h3>Fetching Activities Example</h3>
<p>If you've connected your account with your fitbit account you will see live data displayed below.</p>

<div class="fitbit-data-view" id="fitbit-activities-data">Loading...</div>

<h3>Logging Activity Information</h3>

<p>You may log completed activities for the user with the <code>log_activity</code> method.  It takes a hash of options (explained in more detail in the <a href="https://github.com/whazzmaster/fitgem/blob/master/lib/fitgem/activities.rb">comments</a>), and revolves around knowledge of the activity id.  See the <a href="http://wiki.fitbit.com/display/API/API-Log-Activity">fitbit documentation</a> for more information on the various types of activity id's.</p>

<p>The example below begins with the assumption that we know the activity id of the activity we want to log.  <strong>In practice</strong>, you'll likely need to search or browse for the activity by name to get the correct activity id.</p>

<pre><code class="ruby">client.log_activity({
  :activityId => 1020, # Bicyling
  :durationMillis => 1320000,
  :startTime => "08:33",
  :date => "2011-07-12",
  :distance => "3.93",
  :distanceUnit => Fitgem::ApiDistanceUnit.miles
})
</code></pre>

<h3>Logging Activities Example</h3>
<p>If you've connected your account with your fitbit account you will see live data displayed below.</p>

<div class="fitbit-data-view" id="fitbit-log-activity-data">
  Loading...
</div>

<h3>Deleting Activity Information</h3>

<p>You can delete previously-logged activities if you have the id that was assigned to the logged activity.  The method call is straightforward; pass the logged-activity-id to <code>delete_logged_activity</code>.</p>

<h3>Removing a Favorite Activity</h3>

<p>It is also possible to remove an activity from a user's favorite activity list. Simply call <code>remove_favorite_activity</code> and pass in the activity id.</p>

<div class="row navigation-buttons">
  <div class="small-6 columns go-back">
    <%= link_to "<i class='fa fa-arrow-left'></i> Body Measurements".html_safe, guide_body_measurements_path, class: 'button tiny round' %>
  </div>
  <div class="small-6 columns go-forward">
    <%= link_to "Foods <i class='fa fa-arrow-right'></i>".html_safe, guide_foods_path, class: 'button tiny round' %>
  </div>
</div>

<script type="text/javascript">$(document).ready(function(){FitgemClient.init({logged_in:<%= user_signed_in? %>,linked:<%= user_signed_in? && current_user.linked? %>, routerType:'activities'});});</script>
