<div class="row navigation-buttons">
  <div class="small-6 columns go-back">
    <%= link_to "<i class='fa fa-arrow-left'></i> Activities".html_safe, guide_activities_path, class: 'button tiny round' %>
  </div>
  <div class="small-6 columns go-forward">
    <%= link_to "Fitbit Data Subscriptions <i class='fa fa-arrow-right'></i>".html_safe, guide_subscriptions_path, class: 'button tiny round' %>
  </div>
</div>

<div class="page-header">
  <h1>Foods <small>Chapter 6</small></h1>
</div>

<p>There are two aspects of foods that are tracked by Fitbit: the list of foods that can be used to log user meals, as well as food activity specific to a user.</p>

<h3>Food Search and Food Units</h3>

<div class="panel callout radius">
  <i class="fa fa-book"></i>&nbsp;
  View the Fitbit reference page for searching <a href="http://wiki.fitbit.com/display/API/API-Search-Foods">foods</a> and retrieving <a href="http://wiki.fitbit.com/display/API/API-Get-Food-Units">food units</a> for more information on the underlying REST API.
</div>

<p>Generally, in order to log a user's consumption of a specific food you will need to first get the food ID of the item from Fitbit. You then use the ID to refer to the food when subsequently logging it.  Use the food search API to get a list of potential foods from the Fitbit library.</p>

<p>In order to log food, you'll also need to supply the food unit to use.  Fitgem provides the <code>foods_units</code> method to retrieve the list of food units.</p>

<pre><code class="ruby">@search_results = client.find_food('banana')
@food_units = client.foods_units
</code></pre>

<h3>Food Search Example</h3>
<p>
  If you've connected your account with your fitbit account you will see live data displayed below.
</p>

<div class="fitbit-data-view" id="fitbit-food-search">Loading...</div>

<h3>Retrieving User Foods</h3>

<div class="panel callout radius">
  <i class="fa fa-book"></i>&nbsp;
  View the Fitbit reference page for retrieving <a href="http://wiki.fitbit.com/display/API/API-Get-Recent-Foods">recent</a>, <a href="http://wiki.fitbit.com/display/API/API-Get-Frequent-Foods">frequent</a>, or <a href="http://wiki.fitbit.com/display/API/API-Get-Favorite-Foods">favorite</a> food data for a specific user for more information on the underlying REST API..</a>
</div>

<p>Much like when working with activities a user's food preferences can be access via the recent, frequent, or favorite metadata collections.</p>

<pre><code class="ruby">@recent_foods = client.recent_foods
@frequent_foods = client.frequent_foods
@favorite_foods = client.favorite_foods
</code></pre>

<h3>Logging User Foods</h3>

<div class="panel callout radius">
  <i class="fa fa-book"></i>&nbsp;
  View the Fitbit reference page for <a href="http://wiki.fitbit.com/display/API/API-Log-Food">logging users' foods</a> for more information on the underlying REST API.
</div>

<p>To log the consumption of a food item, you must supply several IDs of items that would be found through searching for foods or through the metadata collections (recent, frequent, or favorites). </p>

<pre><code class="ruby">client.log_food({
  :foodId => 81170, # BACON!
  :mealTypeId => 1, # Breakfast!
  :unitId => 311,
  :amount => 1,
  :date => "2011-08-01"
})
</code></pre>

<h3>Creating User Foods</h3>

<div class="panel callout radius">
  <i class="fa fa-book"></i>&nbsp;
  View the Fitbit reference page for <a href="http://wiki.fitbit.com/display/API/API-Create-Food">creating users' foods</a> for more information on the underlying REST API.
</div>

<p>Sometimes a user may wish to log a food that isn't in the official list you can query through Fitbit.  You can use the <code>create_food</code> method to create private foods to log.  The API doesn't expose as many options for customizing created foods as the Fitbit website does, but it will allow you create a basic food profile that can be expanded later via the website.</p>

<pre><code class="ruby">client.create_food({
  :name => "Amplified Wheybolic Extreme 60 (Cookies & Cream)",
  :defaultFoodMeasurementUnitId => "301",
  :defaultServingSize => "3",
  :calories => "280",
  :formType => "DRY",
  :description => "Protein shake mix"
})
</code></pre>

<h3>Deleting User Foods</h3>

<div class="panel callout radius">
  <i class="fa fa-book"></i>&nbsp;
  View the Fitbit reference page for <a href="http://wiki.fitbit.com/display/API/API-Delete-Food-Log">deleting users' food logs</a> and <a href="http://wiki.fitbit.com/display/API/API-Delete-Favorite-Food">removing a food from users' favorites list</a> for more information on the underlying REST API.
</div>

<p>There are two food-related items that can be deleted through the API: a user's food log can be deleted, and a specific food can be removed from a user's favorites list.</p>

<p>To delete a user's food log, you must have a reference to the food log ID that was assigned to it when it was created.</p>

<p>To remove a food from a user's favorites list, you must have the ID of the food to remove.</p>

<div class="row navigation-buttons">
  <div class="small-6 columns go-back">
    <%= link_to "<i class='fa fa-arrow-left'></i> Activities".html_safe, guide_activities_path, class: 'button tiny round' %>
  </div>
  <div class="small-6 columns go-forward">
    <%= link_to "Fitbit Data Subscriptions <i class='fa fa-arrow-right'></i>".html_safe, guide_subscriptions_path, class: 'button tiny round' %>
  </div>
</div>

<script type="text/javascript">$(document).ready(function(){FitgemClient.init({logged_in:<%= user_signed_in? %>,linked:<%= user_signed_in? && current_user.linked? %>, routerType: 'foods'});});</script>
